name: Deploy Central Site
on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
      deployment_type:
        type: string
        description: Which Akumina code to deploy
        required: true
      widget_name:
        type: string
        description: Single widget to deploy
      token_map:
        type: string
        description:

jobs:
  deploy:
    name: Deploy to SharePoint
    runs-on: windows-latest
    environment: ${{inputs.environment}}
    defaults:
      run:
        working-directory: site

    steps:
      # Checkout the code
      - name: Checkout branch
        uses: actions/checkout@v3

      # Sets up our deployment 
      - uses: "./.github/workflows/composite/setup"
        with:
          deployment_type: ${{ inputs.deployment_type }}

      ## Build the package
      - name: Build
        run: npm run build${{ inputs.environment == 'Prod' && '-prod-ci' || ''}}

      - name: Package
      # TO-DO: Find out of if the tokenMap is really needed
        #run: npm run package ${{ inputs.widget_name }} -- --tokenMap ${{ inputs.token_map }}
        run: npm run package ${{ inputs.widget_name }}

      - name: Upload built artifact
        uses: actions/upload-artifact@v4
        with:
          path: site/build

      ## Deploy the code
      #
      # See documentation:
      # - https://akumina.github.io/docs/Site-Deployer-Overview.html
      # - https://github.com/akumina/SiteDeployer
      # - https://akumina.github.io/docs/Widget-Development-Configuring-akumina-sitedeployer-config
      # - https://akumina.github.io/docs/Site-Deployer-Continuous-Site-Package-Deployment-via-a-console-app.html
      # 
      # We have chosen to use the tools/deploy.js script which reads from akumina.sitedeployer.config.json
      - name: Deploy to Central
        run: npm run deploy
        env:
          assetdirectory: Client
          clientid: ${{ secrets.client_id}}
          clientsecret: ${{ secrets.client_secret }}
          spurl: ${{ vars.central_sp_url }}
          spdirectory: DigitalWorkplace
          ml: true
          envdir: ${{ github.workspace }}\site\build\